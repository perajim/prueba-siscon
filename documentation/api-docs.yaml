openapi: 3.1.0
info:
  title: Employee Service API
  description: API para gesti√≥n de empleados
  version: "1.0"
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: Employees
  description: Operaciones relacionadas con empleados
paths:
  /api/employees/{id}:
    get:
      tags:
      - Employees
      summary: Buscar empleado por ID
      description: Retorna un empleado dado su identificador
      operationId: getById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/EmployeeResponse"
    put:
      tags:
      - Employees
      summary: Actualiza un empleado por ID
      description: Actualiza un solo empleado
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmployeeUpdateRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/EmployeeResponse"
    delete:
      tags:
      - Employees
      summary: Elimina un empleado por ID
      description: elimina empleado
      operationId: delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/DeleteEmployeeResponse"
  /api/employees:
    get:
      tags:
      - Employees
      summary: Lista a todos los empleados almacenados
      description: Lista a todos los empleados almacenados
      operationId: getAll
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EmployeeResponse"
    post:
      tags:
      - Employees
      summary: Crear una lista de empleados
      description: Almacena los empleados recibidos
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/EmployeeRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EmployeeResponse"
  /api/employee:
    post:
      tags:
      - Employees
      summary: Crear un solo empleado
      description: crea un solo empleado
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmployeeRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/EmployeeResponse"
components:
  schemas:
    EmployeeUpdateRequest:
      type: object
      properties:
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        secondLastName:
          type: string
        age:
          type: integer
          format: int32
        gender:
          type: string
        birthDate:
          type: string
          format: date
        position:
          type: string
    EmployeeResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        age:
          type: integer
          format: int32
        gender:
          type: string
        birthDate:
          type: string
          format: date
        position:
          type: string
    EmployeeRequest:
      type: object
      properties:
        firstName:
          type: string
          minLength: 1
        middleName:
          type: string
        lastName:
          type: string
          minLength: 1
        secondLastName:
          type: string
        age:
          type: integer
          format: int32
          minimum: 0
        gender:
          type: string
        birthDate:
          type: string
          format: date
        position:
          type: string
      required:
      - birthDate
      - firstName
      - lastName
    DeleteEmployeeResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
          format: int32
        message:
          type: string
        employeeId:
          type: integer
          format: int64
